<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sungha&#39;s Blog</title>
  
  <subtitle>Daily life in ASLab</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yunseongha.github.io/"/>
  <updated>2019-12-18T13:21:12.953Z</updated>
  <id>https://yunseongha.github.io/</id>
  
  <author>
    <name>Sungha Yoon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git strategy</title>
    <link href="https://yunseongha.github.io/2019/12/18/Git-strategy/"/>
    <id>https://yunseongha.github.io/2019/12/18/Git-strategy/</id>
    <published>2019-12-18T13:19:50.000Z</published>
    <updated>2019-12-18T13:21:12.953Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h2><p>I find good post about git strategy.</p><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><a href="http://woowabros.github.io/experience/2017/10/30/baemin-mobile-git-branch-strategy.html" title="" target="_blank">우린 Git-flow를 사용하고 있어요 - 나동호</a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Contents&quot;&gt;&lt;a href=&quot;#Contents&quot; class=&quot;headerlink&quot; title=&quot;Contents&quot;&gt;&lt;/a&gt;Contents&lt;/h2&gt;&lt;p&gt;I find good post about git strategy.&lt;/p&gt;
&lt;h2 i
      
    
    </summary>
    
    
      <category term="git" scheme="https://yunseongha.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>Character compression</title>
    <link href="https://yunseongha.github.io/2019/12/18/Character-compression/"/>
    <id>https://yunseongha.github.io/2019/12/18/Character-compression/</id>
    <published>2019-12-18T12:31:42.000Z</published>
    <updated>2019-12-18T13:14:48.824Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>There is a string.</p><blockquote><p>aabbccdeffg</p></blockquote><p>We want to compress this string to …</p><blockquote><p>2a2b2cde2fg</p></blockquote><p>So, When a string is given, Write the solution functions(compress_str, extract_str) that changes it to {the number_of_char|char}+, vice versa.</p><h4 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h4><ul><li>Given string consists of characters, A-z.</li><li>The number of a character in given string is unlimited.</li><li>If the number of character is 1, it’s typing is skipped<ul><li>Example<blockquote><p>aacbb -&gt; 2ac2b</p></blockquote></li></ul></li><li>Only 1 character can be processed.<ul><li>Example<blockquote><p>abab -&gt; abab<br>aabb -&gt; 2a2b</p></blockquote></li></ul></li><li>Also, Vice versa can be performed.<ul><li>Example<blockquote><p>4a12bc -&gt; aaaabbbbbbbbbbbbc</p></blockquote></li></ul></li></ul><h4 id="Example-of-inputs"><a href="#Example-of-inputs" class="headerlink" title="Example of inputs"></a>Example of inputs</h4><blockquote><p>“aaaabbbbbbbbbbbbc”<br>“abcabc”<br>“2a3bc”<br>“a4b3c”</p></blockquote><h4 id="Explaination-inputs"><a href="#Explaination-inputs" class="headerlink" title="Explaination inputs"></a>Explaination inputs</h4><ul><li>Example #1-1<ul><li>“aaaabbbbbbbbbbbbc” -&gt; “4a12bc”</li></ul></li><li>Example #1-2<ul><li>“abcabc” -&gt; “abcabc”</li><li>Because the function can process only 1 character, there is no change.</li></ul></li><li>Example #2-1<ul><li>“2a3bc” -&gt; “aabbbc”</li></ul></li><li>Example #2-2<ul><li>“a4b3c” -&gt; “abbbbccc”</li></ul></li></ul><h2 id="Codes"><a href="#Codes" class="headerlink" title="Codes"></a>Codes</h2><figure class="highlight javascript"><figcaption><span>solution.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compress_str</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> count =  <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> answer = <span class="string">""</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;str.length; i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> c = str.substr(i, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">var</span> nextC = str.substr(i+<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(c === nextC)&#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(count===<span class="number">1</span>)&#123;</span><br><span class="line">                answer = answer + c;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                answer = answer + count.toString() + c;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        count = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extract_str</span>(<span class="params">str</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> count = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">var</span> answer = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;str.length; i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> c = str.substr(i, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Number</span>.isInteger(<span class="built_in">parseInt</span>(c)))&#123;</span><br><span class="line">            count = count + c;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(count===<span class="string">""</span>)&#123;</span><br><span class="line">                answer = answer + c;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;<span class="built_in">parseInt</span>(count); j++)&#123;</span><br><span class="line">                    answer = answer + c;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            count = <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> answer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="result"><a href="#result" class="headerlink" title="result"></a>result</h2><img src="https://github.com/YunSeongha/yunseongha.github.io/blob/master/2019/12/18/Character-compression/result.JPG?raw=true" class="" title="result">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;There is a string.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;aabbccdeffg&lt;
      
    
    </summary>
    
    
      <category term="javascript" scheme="https://yunseongha.github.io/categories/javascript/"/>
    
    
  </entry>
  
  <entry>
    <title>How to write git commit messages</title>
    <link href="https://yunseongha.github.io/2019/12/17/How-to-write-git-commit-messages/"/>
    <id>https://yunseongha.github.io/2019/12/17/How-to-write-git-commit-messages/</id>
    <published>2019-12-17T02:38:50.000Z</published>
    <updated>2019-12-17T02:47:52.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h2><p>I find good post about good git commit messages<br>“7 promises for writing good git commit messages” - Toast Meetup!</p><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><a href="https://meetup.toast.com/posts/106" title="" target="_blank">좋은 git 커밋 메시지를 작성하기 위한 7가지 약속 - Toast Meetup!</a>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Contents&quot;&gt;&lt;a href=&quot;#Contents&quot; class=&quot;headerlink&quot; title=&quot;Contents&quot;&gt;&lt;/a&gt;Contents&lt;/h2&gt;&lt;p&gt;I find good post about good git commit message
      
    
    </summary>
    
    
      <category term="git" scheme="https://yunseongha.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>shellscript - automate-clone</title>
    <link href="https://yunseongha.github.io/2019/12/16/shellscript-automate-clone/"/>
    <id>https://yunseongha.github.io/2019/12/16/shellscript-automate-clone/</id>
    <published>2019-12-15T22:42:27.000Z</published>
    <updated>2019-12-15T23:58:22.446Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>I want to perform git clone a lot. (about 50times)<br>It takes 2 hours. (Don’t you believe? I don’t still believe that)</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>To do above, It is really dumb thing<br>So, I solve it to use shellscript and text file</p><h4 id="Prepare"><a href="#Prepare" class="headerlink" title="Prepare"></a>Prepare</h4><ol><li>Text file (It has ID, the repo name or the subset of repo name)<ul><li>ex) in text file,<blockquote><p>yoonsungha_id yoonsungha_repo</p></blockquote></li></ul></li><li>Shellscript file (bitbucket example)<ul><li>ex)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> input</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    repoName=$(<span class="built_in">echo</span> <span class="variable">$&#123;input&#125;</span> | awk -F<span class="string">' '</span> <span class="string">'&#123;print $1&#125;'</span>)</span><br><span class="line">    repoOwnerID=$(<span class="built_in">echo</span> <span class="variable">$&#123;input&#125;</span> | awk -F<span class="string">' '</span> <span class="string">'&#123;print $2&#125;'</span>)</span><br><span class="line">    git <span class="built_in">clone</span> https://&lt;myid&gt;@bitbucket.org/<span class="variable">$&#123;repoOwnerID&#125;</span>/<span class="variable">$&#123;repoName&#125;</span>.git</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">    </span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat &lt;text file&gt; | sh &lt;bash file&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;I want to perform git clone a lot. (about 50times)
      
    
    </summary>
    
    
      <category term="bash shellscript" scheme="https://yunseongha.github.io/categories/bash-shellscript/"/>
    
    
  </entry>
  
  <entry>
    <title>command - create directory</title>
    <link href="https://yunseongha.github.io/2019/12/16/command-create-directory/"/>
    <id>https://yunseongha.github.io/2019/12/16/command-create-directory/</id>
    <published>2019-12-15T21:55:25.000Z</published>
    <updated>2019-12-15T22:34:16.819Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>I want to create folders hw1, hw2, … hw10<br>Then, Should I perform “mkdir hw#” 10 times?</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>To do above, It is really dumb thing<br>So, I solve it to use shellscript below</p><h3 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cur=1</span><br><span class="line">$ <span class="keyword">while</span> [ <span class="variable">$cur</span> -le 10 ]; <span class="keyword">do</span> mkdir hw<span class="variable">$&#123;cur&#125;</span>; <span class="built_in">let</span> cur=cur+1; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="Result"><a href="#Result" class="headerlink" title="Result"></a>Result</h3><img src="https://github.com/YunSeongha/yunseongha.github.io/blob/master/2019/12/16/command-create-directory/result.JPG?raw=true" class="" title="result">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Problem&quot;&gt;&lt;a href=&quot;#Problem&quot; class=&quot;headerlink&quot; title=&quot;Problem&quot;&gt;&lt;/a&gt;Problem&lt;/h2&gt;&lt;p&gt;I want to create folders hw1, hw2, … hw10&lt;br&gt;Then,
      
    
    </summary>
    
    
      <category term="bash shellscript" scheme="https://yunseongha.github.io/categories/bash-shellscript/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yunseongha.github.io/2019/12/16/hello-world/"/>
    <id>https://yunseongha.github.io/2019/12/16/hello-world/</id>
    <published>2019-12-15T19:44:07.847Z</published>
    <updated>2019-12-15T21:53:07.378Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="first" scheme="https://yunseongha.github.io/categories/first/"/>
    
    
      <category term="hexo, chiangmai" scheme="https://yunseongha.github.io/tags/hexo-chiangmai/"/>
    
  </entry>
  
</feed>
